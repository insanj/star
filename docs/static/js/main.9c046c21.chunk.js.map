{"version":3,"sources":["img/acnh_island.png","img/acnh_fruit.png","img/acnh_flowers.png","img/acnh_trees.png","app.js","index.js"],"names":["module","exports","useLegendStyles","makeStyles","theme","form","display","Legend","treesChecked","onTreesChecked","fruitChecked","onFruitChecked","flowersChecked","onFlowersChecked","classes","FormControl","component","className","FormControlLabel","control","Checkbox","checked","onChange","event","target","name","label","useIslandStyles","layerImage","position","objectFit","borderRadius","image","background","boxShadow","Island","trees","alt","src","islandTrees","width","height","align","fruit","islandFruit","flowers","islandFlowers","island","useStyles","root","right","left","top","bottom","overflow","paper","margin","maxHeight","maxWidth","caption","paddingTop","fontSize","color","fontWeight","textAlign","footer","App","React","useState","setTreesChecked","setFruitChecked","setFlowersChecked","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c046c21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/acnh_island.82902e0c.png\";","module.exports = __webpack_public_path__ + \"static/media/acnh_fruit.1499036b.png\";","module.exports = __webpack_public_path__ + \"static/media/acnh_flowers.fae86c2e.png\";","module.exports = __webpack_public_path__ + \"static/media/acnh_trees.be21a121.png\";","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nimport preval from 'preval.macro';\n\nimport 'hover.css';\n\nimport island from './img/acnh_island.png';\nimport islandFruit from './img/acnh_fruit.png';\nimport islandFlowers from './img/acnh_flowers.png';\nimport islandTrees from './img/acnh_trees.png';\n\nconst useLegendStyles = makeStyles((theme) => ({\n  form: {\n    display: 'block'\n  },\n}));\n\nfunction Legend({ treesChecked=true, onTreesChecked, fruitChecked=true, onFruitChecked, flowersChecked=true, onFlowersChecked }) {\n  const classes = useLegendStyles();\n\n  const handleTreesChecked = (event) => {\n    onTreesChecked(event.target.checked);\n  };\n\n  const handleFruitChecked = (event) => {\n    onFruitChecked(event.target.checked);\n  };\n\n  const handleFlowersChecked = (event) => {\n    onFlowersChecked(event.target.checked);\n  };\n\n  return (\n    <FormControl component=\"fieldset\" className={classes.form}>\n\n      <FormControlLabel\n        control={<Checkbox checked={treesChecked} onChange={ handleTreesChecked } name=\"trees\" />}\n        label=\"Trees\"\n      />\n\n      <FormControlLabel\n        control={<Checkbox checked={fruitChecked} onChange={ handleFruitChecked } name=\"fruit\" />}\n        label=\"Fruit\"\n      />\n\n      <FormControlLabel\n        control={<Checkbox checked={flowersChecked} onChange={ handleFlowersChecked } name=\"flowers\" />}\n        label=\"Flowers\"\n      />\n        \n    </FormControl>\n  );\n}\n\nconst useIslandStyles = makeStyles((theme) => ({\n  layerImage: {\n    position: 'absolute',\n    objectFit: 'contain',\n    borderRadius: '40px',\n  },\n  image: {\n    objectFit: 'contain',\n    background: '#75d5ff',\n    borderRadius: '40px',\n    boxShadow: '0 0 15px rgba(0,0,0,0.5)'\n  },\n}));\n\nfunction Island({ checked }) {\n  const classes = useIslandStyles();\n\n  const islandImage = () => {\n    return island;\n  }\n\n  return (\n    <div className=\"hvr-grow\">\n      { checked.trees !== true ? '' : (\n          <img alt=\"ACNH Trees\" src={ islandTrees } width=\"100%\" height=\"100%\" align=\"center\" className={classes.layerImage}/>\n        )\n      } \n\n      { checked.fruit !== true ? '' : (\n          <img alt=\"ACNH Fruit\" src={ islandFruit } width=\"100%\" height=\"100%\" align=\"center\" className={classes.layerImage}/>\n        )\n      } \n      \n      { checked.flowers !== true ? '' : (\n          <img alt=\"ACNH Flowers\" src={ islandFlowers } width=\"100%\" height=\"100%\" align=\"center\" className={classes.layerImage}/>\n        )\n      } \n\n      <img alt=\"ACNH Island\" src={ island } width=\"100%\" height=\"100%\" align=\"center\" className={classes.image }/>\n    </div> \n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    right: 0,\n    left: 0,\n    top: 0,\n    bottom: 0,\n    display: 'flex',\n    background: '#343534',\n    overflow: 'scroll',\n  },\n  paper: {\n    margin: 'auto',\n    maxHeight: '600px',\n    width: '80%',\n    maxWidth: '600px',\n  },\n  caption: {\n    paddingTop: '10px',\n    fontSize: '1em',\n    color: 'rgba(255,255,255,0.2)',\n    fontWeight: 400,\n    textAlign: 'center',\n    width: '100%',\n  },\n  footer: {\n    position: 'absolute',\n    left: 0,\n    right: 10,\n    bottom: 0,\n    height: '50px',\n    textAlign: 'right',\n    color: 'rgba(255,255,255,0.1)',\n    background: 'none',\n    fontSize: '0.9em'\n  }\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const buildDate = preval`module.exports = new Date().toLocaleString(\"en\").toLowerCase();`;\n\n  const [treesChecked, setTreesChecked] = React.useState(true);\n  const [fruitChecked, setFruitChecked] = React.useState(true);\n  const [flowersChecked, setFlowersChecked] = React.useState(true);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.footer}>\n      (c) 2020 julian weiss\n      <br/>\n      fruit: <a href=\"http://kafae-latte.deviantart.com/art/Animal-Crossing-Fruits-356876907\">kafae-latte</a></div>\n\n      <div className={classes.paper}>\n        <Island \n          checked={{\n            trees: treesChecked,\n            fruit: fruitChecked,\n            flowers: flowersChecked\n          }}\n        />\n\n        <div className={classes.caption}>\n          <Legend \n            treesChecked={treesChecked} \n            onTreesChecked={(checked) => setTreesChecked(checked)}\n            fruitChecked={fruitChecked} \n            onFruitChecked={(checked) => setFruitChecked(checked)}\n            flowersChecked={flowersChecked} \n            onFlowersChecked={(checked) => setFlowersChecked(checked)}\n          />\n          <br/>\n          { buildDate }\n        </div>\n      </div>\n\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app';\n\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}